pipeline {
  agent any

  parameters {
      name: 'DOCKER_IMAGE_TAG',
      description: 'Choose a Docker image tag:',
      choices:[],
  }

  stages {
    stage('Deploy') {
      steps {
        script {
          def ecr_registry = "602997897775.dkr.ecr.eu-central-1.amazonaws.com"
          def image_name = "nextjs"
          def docker_image = "${ecr_registry}/${image_name}:${params.DOCKER_IMAGE_TAG}"

          dir('terraform') {
            sh 'terraform init'
            sh 'terraform apply -auto-approve -var "docker_image=' + docker_image + '" -var "security_group_ids=[\'sg-0ac2a2c0734cd86d7\']" -var "elastic_ip_allocation_id=eipassoc-0a26680799ee0a8a7"'
          }

          def public_ip = sh(
            script: 'terraform output public_ip',
            returnStdout: true
          ).trim()

          sshagent(['my-ssh-credentials']) {
            sh "ssh ec2-user@${public_ip} -o StrictHostKeyChecking=no 'sudo docker login -u AWS -p \$(aws ecr get-login-password) ${ecr_registry}'"
            sh "ssh ec2-user@${public_ip} -o StrictHostKeyChecking=no 'sudo docker pull ${docker_image}'"
          }

          currentBuild.result = 'SUCCESS'
        }
      }
    }
  }
}
